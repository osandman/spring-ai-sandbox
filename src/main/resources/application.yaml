spring:
  application:
    name: ai-sandbox
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://localhost:5432/vector_db
    username: user
    password: password
  ai:
    retry:
      max-attempts: 3
    gigachat:
      scope: GIGACHAT_API_PERS
      client-id: ${GIGACHAT_API_CLIENT_ID}
      client-secret: ${GIGACHAT_API_CLIENT_SECRET}
      unsafe-ssl: true
      chat:
        options:
          model: GigaChat
      embedding:
        options:
          model: Embeddings
    ollama:
      chat:
        model: gemma3:4b
        options:
          temperature: 0.5 # default 0.8
          num-predict: 128 # default 128
          top-k: 20 # default 40
      embedding:
        model: mxbai-embed-large
    vectorstore:
      pgvector:
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        max-document-batch-size: 5000 # Maximum 10_000 documents per batch
#        initialize-schema: true # create table if not exists using embedding model dimension

server:
  port: 8088
  servlet:
    context-path: /api
    encoding:
      force: true
  error:
    include-message: always
    include-binding-errors: always

simple-vector-store:
  path: data/simple-vector-store.json

logging:
  level:
    org.springframework.ai.chat.client.advisor: DEBUG
    chat.giga.springai.api.chat: DEBUG
    org.springframework.ai.vectorstore: DEBUG
    chat.giga.springai.GigaChatEmbeddingModel: DEBUG
